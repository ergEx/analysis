# Model selection selecting between two different models
# EUT model: eta_i_add = eta_mul
# EE model: eta_add = 0, eta_mul = 1

model{

##LIKELIHOOD
for (c in 1:nConditions){
for (i in 1:nSubjects){
oneminEta_EUT[i,c] = 1 - eta_EUT[i]
oneminEta_EE[i,c] = 1 - eta_EE[i,c]
oneminEta_EEU[i,c] = 1 - eta_EEU[i,c]

for (t in 1:nTrials){
    #CALCULATE WEALTH UPDATES
    wLU[i,c,t]    = w[i,c,t] + dwLU[i,c,t]
    wLL[i,c,t]    = w[i,c,t] + dwLL[i,c,t]
    wRU[i,c,t]    = w[i,c,t] + dwRU[i,c,t]
    wRL[i,c,t]    = w[i,c,t] + dwRL[i,c,t]

    #EUT
    u_EUT[i,c,t]      = (pow(w[i,c,t],oneminEta_EUT[i,c]) - 1) / oneminEta_EUT[i,c]
    uLU_EUT[i,c,t]    = (pow(wLU[i,c,t],oneminEta_EUT[i,c]) - 1) / oneminEta_EUT[i,c]
    uLL_EUT[i,c,t]    = (pow(wLL[i,c,t],oneminEta_EUT[i,c]) - 1) / oneminEta_EUT[i,c]
    uRU_EUT[i,c,t]    = (pow(wRU[i,c,t],oneminEta_EUT[i,c]) - 1) / oneminEta_EUT[i,c]
    uRL_EUT[i,c,t]    = (pow(wRL[i,c,t],oneminEta_EUT[i,c]) - 1) / oneminEta_EUT[i,c]
    duLU_EUT[i,c,t]   = uLU_EUT[i,c,t] - u_EUT[i,c,t]
    duLL_EUT[i,c,t]   = uLL_EUT[i,c,t] - u_EUT[i,c,t]
    duRU_EUT[i,c,t]   = uRU_EUT[i,c,t] - u_EUT[i,c,t]
    duRL_EUT[i,c,t]   = uRL_EUT[i,c,t] - u_EUT[i,c,t]
    eduL_EUT[i,c,t]   = (duLU_EUT[i,c,t] + duLL_EUT[i,c,t]) / 2
    eduR_EUT[i,c,t]   = (duRU_EUT[i,c,t] + duRL_EUT[i,c,t]) / 2
    deu_EUT[i,c,t]    = eduL_EUT[i,c,t] - eduR_EUT[i,c,t]
    sdeu_EUT[i,c,t]   = -1 * beta_EUT[i,c] * deu_EUT[i,c,t]
    cp_EUT[i,c,t]     = 1 / (1 + (exp(sdeu_EUT[i,c,t])))
    theta[i,c,t,1]    = max(0.000001,min(0.999999,cp_EUT[i,c,t]))
    theta[i,c,t,4]    = max(0.000001,min(0.999999,cp_EUT[i,c,t]))

    #EE
    u_EE[i,c,t]      = (pow(w[i,c,t],oneminEta_EE[i,c]) - 1) / oneminEta_EE[i,c]
    uLU_EE[i,c,t]    = (pow(wLU[i,c,t],oneminEta_EE[i,c]) - 1) / oneminEta_EE[i,c]
    uLL_EE[i,c,t]    = (pow(wLL[i,c,t],oneminEta_EE[i,c]) - 1) / oneminEta_EE[i,c]
    uRU_EE[i,c,t]    = (pow(wRU[i,c,t],oneminEta_EE[i,c]) - 1) / oneminEta_EE[i,c]
    uRL_EE[i,c,t]    = (pow(wRL[i,c,t],oneminEta_EE[i,c]) - 1) / oneminEta_EE[i,c]
    duLU_EE[i,c,t]   = uLU_EE[i,c,t] - u_EE[i,c,t]
    duLL_EE[i,c,t]   = uLL_EE[i,c,t] - u_EE[i,c,t]
    duRU_EE[i,c,t]   = uRU_EE[i,c,t] - u_EE[i,c,t]
    duRL_EE[i,c,t]   = uRL_EE[i,c,t] - u_EE[i,c,t]
    eduL_EE[i,c,t]   = (duLU_EE[i,c,t] + duLL_EE[i,c,t]) / 2
    eduR_EE[i,c,t]   = (duRU_EE[i,c,t] + duRL_EE[i,c,t]) / 2
    deu_EE[i,c,t]    = eduL_EE[i,c,t] - eduR_EE[i,c,t]
    sdeu_EE[i,c,t]   = -1 * beta_EE[i,c] * deu_EE[i,c,t]
    cp_EE[i,c,t]     = 1 / (1 + (exp(sdeu_EE[i,c,t])))
    theta[i,c,t,2]   = max(0.000001,min(0.999999,cp_EE[i,c,t]))
    theta[i,c,t,5]   = max(0.000001,min(0.999999,cp_EE[i,c,t]))

    #EEU
    u_EEU[i,c,t]      = (pow(w[i,c,t],oneminEta_EEU[i,c]) - 1) / oneminEta_EEU[i,c]
    uLU_EEU[i,c,t]    = (pow(wLU[i,c,t],oneminEta_EEU[i,c]) - 1) / oneminEta_EEU[i,c]
    uLL_EEU[i,c,t]    = (pow(wLL[i,c,t],oneminEta_EEU[i,c]) - 1) / oneminEta_EEU[i,c]
    uRU_EEU[i,c,t]    = (pow(wRU[i,c,t],oneminEta_EEU[i,c]) - 1) / oneminEta_EEU[i,c]
    uRL_EEU[i,c,t]    = (pow(wRL[i,c,t],oneminEta_EEU[i,c]) - 1) / oneminEta_EEU[i,c]
    duLU_EEU[i,c,t]   = uLU_EEU[i,c,t] - u_EEU[i,c,t]
    duLL_EEU[i,c,t]   = uLL_EEU[i,c,t] - u_EEU[i,c,t]
    duRU_EEU[i,c,t]   = uRU_EEU[i,c,t] - u_EEU[i,c,t]
    duRL_EEU[i,c,t]   = uRL_EEU[i,c,t] - u_EEU[i,c,t]
    eduL_EEU[i,c,t]   = (duLU_EEU[i,c,t] + duLL_EEU[i,c,t]) / 2
    eduR_EEU[i,c,t]   = (duRU_EEU[i,c,t] + duRL_EEU[i,c,t]) / 2
    deu_EEU[i,c,t]    = eduL_EEU[i,c,t] - eduR_EEU[i,c,t]
    sdeu_EEU[i,c,t]   = -1 * beta_EEU[i,c] * deu_EEU[i,c,t]
    cp_EEU[i,c,t]     = 1 / (1 + (exp(sdeu_EEU[i,c,t])))
    theta[i,c,t,3]   = max(0.000001,min(0.999999,cp_EEU[i,c,t]))
    theta[i,c,t,6]   = max(0.000001,min(0.999999,cp_EEU[i,c,t]))

    #choice
    y[i,c,t]          ~ dbern(theta[i,c,t,z[i]])

}# end of trials
}# end of conditions
}# end of subjects


## PRIORS
#model indicator
#the model indicator variable z can take on any value from 1:n, and is subject to two stochastic processes, to prevent getting stuck
#the n values map onto just 3 models, and is simply a means of obtaining parameter expansion for the model indication
for (i in 1:nSubjects){
z[i]        ~ dcat(pz[])
}

#submodels

for (i in 1:nSubjects){
    eta_EUT[i] ~ dnorm(mu_eta_EUT,tau_eta_EUT)

    d_eta_i[i] ~ dnorm(mu_d_eta,tau_d_eta)
    eta_i_EEU[i,1] ~ dnorm(0 + d_eta_g[i],tau_eta_EEU)
    eta_i_EEU[i,2] ~ dnorm(1 + d_eta_g[i],tau_eta_EEU)

for (c in 1:nConditions){
    eta_EE[i,c]       ~ dnorm(mu_eta_EE[c],tau_eta_EE)

    beta_EUT[i,c]     = exp(log_beta_EUT[i,c])
    log_beta_EUT[i,c] ~ dnorm(mu_log_beta_EUT[c], tau_log_beta_EUT[c])

    beta_EE[i,c]      = exp(log_beta_EE[i,c])
    log_beta_EE[i,c]  ~ dnorm(mu_log_beta_EE[c], tau_log_beta_EE[c])

    beta_EEU[i,c]      = exp(log_beta_EEU[i,c])
    log_beta_EEU[i,c]  ~ dnorm(mu_log_beta_EEU[c], tau_log_beta_EEU[c])

  }#end of subjects
}#end of conditions


##HYPERPRIORS
for (c in 1:nConditions){
    #EUT
    mu_log_beta_EUT[c]    ~ dunif(muLogBetaL, muLogBetaH)
    sigma_log_beta_EUT[c] ~ dunif(sigmaL,sigmaH)
    tau_log_beta_EUT[c]   = pow(sigma_log_beta_EUT[c],-2)

    #EE
    mu_log_beta_EE[c]     ~ dunif(muLogBetaL, muLogBetaH)
    sigma_log_beta_EE[c]  ~ dunif(sigmaL,sigmaH)
    tau_log_beta_EE[c]    = pow(sigma_log_beta_EE[c],-2)

    #EEU
    mu_log_beta_EEU[c]     ~ dunif(muLogBetaL, muLogBetaH)
    sigma_log_beta_EEU[c]  ~ dunif(sigmaL,sigmaH)
    tau_log_beta_EEU[c]    = pow(sigma_log_beta_EEU[c],-2)

}#end of conditions

#EUT
mu_eta_EUT    ~ dunif(muEtaL , muEtaH)
sigma_eta_EUT ~ dunif(sigmaL, sigmaH)
tau_eta_EUT   = pow(sigma_eta_EUT,-2)

#EE
mu_eta_EE[1] = muEtaEEAdd
mu_eta_EE[2] = muEtaEEMul
sigma_eta_EE ~ dunif(sigmaL, sigmaH)
tau_eta_EE   = pow(sigma_eta_EE,-2)

mu_d_eta    ~ dunif(muEtaL,muEtaH)
tau_d_eta   = pow(sigma_d_eta,-2)
sigma_d_eta ~ dunif(sigmaL,sigmaH)
sigma_eta_EEU ~ dunif(sigmaL, sigmaH)
tau_eta_EEU   = pow(sigma_eta_EEU,-2)

}

